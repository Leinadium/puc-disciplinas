basePath: /
definitions:
  avaliacoes.InputDisciplinaDelete:
    properties:
      codigo:
        type: string
    type: object
  avaliacoes.InputDisciplinaPost:
    properties:
      codigo:
        type: string
      nota:
        type: integer
    type: object
  avaliacoes.InputProfessorDelete:
    properties:
      nome:
        type: string
    type: object
  avaliacoes.InputProfessorPost:
    properties:
      nome:
        type: string
      nota:
        type: integer
    type: object
  avaliacoes.ItemDisciplinaCompleta:
    properties:
      codigo:
        type: string
      media:
        $ref: '#/definitions/null.Float'
      nome:
        type: string
      nota:
        $ref: '#/definitions/null.Int'
      qtd:
        type: integer
    type: object
  avaliacoes.ItemProfessorCompleto:
    properties:
      media:
        $ref: '#/definitions/null.Float'
      nome:
        type: string
      nota:
        $ref: '#/definitions/null.Int'
      qtd:
        type: integer
    type: object
  avaliacoes.ResultGetAvaliacao:
    properties:
      disciplinas:
        items:
          $ref: '#/definitions/avaliacoes.ItemDisciplinaCompleta'
        type: array
      professores:
        items:
          $ref: '#/definitions/avaliacoes.ItemProfessorCompleto'
        type: array
    type: object
  controllers.ResultCheck:
    properties:
      curriculo:
        type: boolean
      message:
        type: string
      nome:
        type: string
      usuario:
        type: string
    type: object
  controllers.ResultHistorico:
    properties:
      curriculo:
        type: string
      inseridos:
        type: integer
    type: object
  disciplinas.ResultCodigo:
    properties:
      codigo:
        type: string
    type: object
  disciplinas.ResultCompleto:
    properties:
      disciplinas:
        items:
          $ref: '#/definitions/disciplinas.ResultLista'
        type: array
      modificacao:
        $ref: '#/definitions/models.Modificacao'
    type: object
  disciplinas.ResultInfo:
    properties:
      codDiscDepen:
        type: string
      codigo:
        type: string
      creditos:
        type: integer
      ementa:
        type: string
      grupoPrereq:
        type: integer
      mediaAvaliacao:
        type: number
      mediaGrau:
        type: number
      nome:
        type: string
      qtdAlunos:
        type: integer
      qtdAvaliacoes:
        type: integer
    type: object
  disciplinas.ResultLista:
    properties:
      codigo:
        type: string
      creditos:
        type: integer
      nome:
        type: string
      qtdTurmas:
        type: integer
      qtdVagas:
        type: integer
    type: object
  models.Modificacao:
    properties:
      dataEmenta:
        type: string
      dataGeral:
        type: string
    type: object
  null.Float:
    properties:
      float64:
        type: number
      valid:
        description: Valid is true if Float64 is not NULL
        type: boolean
    type: object
  null.Int:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
  recomendacao.InputEscolha:
    properties:
      disciplina:
        type: string
      turma:
        type: string
    type: object
  recomendacao.InputRecomendacao:
    properties:
      escolhas:
        items:
          $ref: '#/definitions/recomendacao.InputEscolha'
        type: array
    type: object
  recomendacao.ResultAlg:
    properties:
      cod:
        type: string
      pes:
        $ref: '#/definitions/recomendacao.ResultPesos'
      val:
        type: number
    type: object
  recomendacao.ResultPesos:
    properties:
      a:
        type: number
      c:
        type: number
      h:
        type: number
      o:
        type: number
      p:
        type: number
    type: object
host: localhost:8080
info:
  contact:
    name: Daniel
    url: https://github.com/Leinadium/puc-disciplinas
  description: API para o projeto Leinadium/puc-disciplinas
  license:
    name: MIT
  title: puc-disciplinas API
  version: "1.0"
paths:
  /avaliacoes:
    get:
      description: Coleta todas as avaliacoes
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/avaliacoes.ResultGetAvaliacao'
        "401":
          description: Nao logado
          schema:
            type: string
        "500":
          description: Erro ao executar query das disciplinas
          schema:
            type: string
      summary: Coleta todas as avaliacoes
  /avaliacoes/disciplina:
    delete:
      consumes:
      - application/json
      description: Deleta uma avaliacao de disciplina
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/avaliacoes.InputDisciplinaDelete'
      produces:
      - application/json
      responses:
        "200":
          description: Avaliacao deletada com sucesso
          schema:
            type: string
        "400":
          description: Requisicao invalida
          schema:
            type: string
        "401":
          description: Nao logado
          schema:
            type: string
        "500":
          description: Nao foi possivel deletar sua avaliacao
          schema:
            type: string
      summary: Deleta uma avaliacao de disciplina
    post:
      consumes:
      - application/json
      description: Salva uma avaliacao de disciplina
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/avaliacoes.InputDisciplinaPost'
      produces:
      - application/json
      responses:
        "200":
          description: Avaliacao salva com sucesso
          schema:
            type: string
        "400":
          description: Requisicao invalida
          schema:
            type: string
        "401":
          description: Nao logado
          schema:
            type: string
        "500":
          description: Nao foi possivel salvar sua avaliacao
          schema:
            type: string
      summary: Salva uma avaliacao de disciplina
  /avaliacoes/professor:
    delete:
      consumes:
      - application/json
      description: Deleta uma avaliacao de professor
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/avaliacoes.InputProfessorDelete'
      produces:
      - application/json
      responses:
        "200":
          description: Avaliacao deletada com sucesso
          schema:
            type: string
        "400":
          description: Requisicao invalida
          schema:
            type: string
        "401":
          description: Nao logado
          schema:
            type: string
        "500":
          description: Nao foi possivel deletar sua avaliacao
          schema:
            type: string
      summary: Deleta uma avaliacao de professor
    post:
      consumes:
      - application/json
      description: Salva uma avaliacao de professor
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/avaliacoes.InputProfessorPost'
      produces:
      - application/json
      responses:
        "200":
          description: Avaliacao salva com sucesso
          schema:
            type: string
        "400":
          description: Requisicao invalida
          schema:
            type: string
        "401":
          description: Nao logado
          schema:
            type: string
        "500":
          description: Nao foi possivel salvar sua avaliacao
          schema:
            type: string
      summary: Salva uma avaliacao de professor
  /disciplina/info:
    get:
      description: Coleta a informação completa de uma disciplina
      parameters:
      - description: Codigo da disciplina
        in: query
        name: c
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            items:
              $ref: '#/definitions/disciplinas.ResultInfo'
            type: array
        "404":
          description: Disciplina nao encontrada
          schema:
            type: string
        "500":
          description: Erro ao executar query
          schema:
            type: string
      summary: Coleta a informação completa de uma disciplina
  /grade:
    get:
      description: Coleta uma grade
      parameters:
      - description: ID da grade
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            type: string
        "400":
          description: ID nao fornecido
          schema:
            type: string
        "404":
          description: Grade nao encontrada
          schema:
            type: string
        "500":
          description: Erro ao conectar ao banco de dados
          schema:
            type: string
      summary: Coleta uma grade
    post:
      consumes:
      - application/json
      description: Salva uma grade
      parameters:
      - description: Grade a ser salva
        in: body
        name: grade
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: id
          schema:
            type: string
        "400":
          description: Erro no corpo da requisicao
          schema:
            type: string
        "401":
          description: Nao logado
          schema:
            type: string
        "500":
          description: Erro ao salvar grade
          schema:
            type: string
      summary: Salva uma grade
  /historico:
    post:
      consumes:
      - multipart/form-data
      description: Envia um histórico
      parameters:
      - description: Arquivo do histórico
        in: formData
        name: historico
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/controllers.ResultHistorico'
        "400":
          description: Erro ao ler arquivo (3)
          schema:
            type: string
        "401":
          description: Nao logado
          schema:
            type: string
        "500":
          description: Erro ao enviar histórico para o microserviço
          schema:
            type: string
      summary: Envia um histórico
  /login:
    get:
      description: Testa o login do usuário através do cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Sucesso
          schema:
            $ref: '#/definitions/controllers.ResultCheck'
        "401":
          description: Não logado
          schema:
            type: string
      summary: Verifica o login do usuário
    post:
      description: Faz login do usuário, setando o cookie
      parameters:
      - description: Usuário
        in: formData
        name: usuario
        required: true
        type: string
      - description: Senha
        in: formData
        name: senha
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Nome do usuário
          schema:
            type: string
        "400":
          description: Usuário ou senha não informados
          schema:
            type: string
        "401":
          description: Usuário ou senha incorretos
          schema:
            type: string
        "500":
          description: Erro ao acessar o serviço de login
          schema:
            type: string
      summary: Faz login
  /logout:
    post:
      description: Faz logout do usuario, resetando o cookie
      produces:
      - application/json
      responses:
        "200":
          description: Logout realizado com sucesso
          schema:
            type: string
        "500":
          description: Erro ao salvar sessão
          schema:
            type: string
      summary: Faz logout do usuario
  /pesquisa/cursadas:
    get:
      description: Coleta os codigos das disciplinas que o usuario cursou
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/disciplinas.ResultCodigo'
            type: array
        "401":
          description: Usuario nao logado
          schema:
            type: string
        "500":
          description: Erro ao executar query
          schema:
            type: string
      summary: Coleta os codigos das disciplinas que o usuario cursou
  /pesquisa/faltacursar:
    get:
      description: Coleta o código das disciplinas que o usuário falta cursar. É vazio
        se o usuário nao estiver logado.
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            items:
              $ref: '#/definitions/disciplinas.ResultCodigo'
            type: array
        "500":
          description: Erro ao executar query
          schema:
            type: string
      summary: Coleta as disciplinas que o usuario falta cursar
  /pesquisa/info:
    get:
      description: Coleta as informações das disciplinas, além da data de modificação.
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/disciplinas.ResultCompleto'
        "500":
          description: Erro ao executar query
          schema:
            type: string
      summary: Coleta todas as disciplinas
  /pesquisa/podecursar:
    get:
      description: Coleta o código das disciplinas que o usuário pode cursar
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            items:
              $ref: '#/definitions/disciplinas.ResultCodigo'
            type: array
        "500":
          description: Erro ao executar query
          schema:
            type: string
      summary: Coleta as disciplinas que o usuario pode cursar
  /recomendacao:
    post:
      description: Coleta as disciplinas recomendadas
      parameters:
      - description: Corpo da requisicao
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/recomendacao.InputRecomendacao'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            items:
              $ref: '#/definitions/recomendacao.ResultAlg'
            type: array
        "400":
          description: Erro ao ler corpo da requisicao
          schema:
            type: string
        "500":
          description: Erro ao executar query
          schema:
            type: string
      summary: Coleta as disciplinas recomendadas
swagger: "2.0"
